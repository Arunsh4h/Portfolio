@tailwind base;
@tailwind components;
@tailwind utilities;

@import 'prism.css';

@layer base {
  * {
    @apply box-border;
  }
  h1 {
    @apply text-4xl font-bold tracking-tight md:text-5xl lg:text-6xl;
  }
  h2 {
    @apply text-3xl font-bold tracking-tight md:text-4xl lg:text-5xl;
  }
  h3 {
    @apply text-3xl font-bold tracking-tight lg:text-4xl;
  }
  h4 {
    @apply text-2xl font-bold md:text-3xl;
  }
  h5 {
    @apply text-xl font-bold md:text-2xl;
  }
  h6 {
    @apply text-lg font-bold md:text-xl;
  }
  p {
    @apply text-base md:text-lg;
  }
  small,
  small * {
    @apply text-sm font-medium md:text-base;
  }
  :is(h1, h2, h3, h4, h5, h6) {
    & > em {
      @apply text-gradient-500 not-italic;
    }
    & > span {
      color: var(--tw-prose-counters);
    }
  }
}

@layer utilities {
  .text-gradient-500 {
    @apply bg-gradient-to-br from-alpha to-beta bg-clip-text text-transparent;
  }
  .bg-gradient-omega-900 {
    @apply bg-gradient-to-r from-omega-900 to-omega-800;
  }
  .with-back-plate {
    @apply relative mb-2 -translate-x-2 md:mb-2 md:-translate-x-2;
    &::before {
      @apply absolute right-0 bottom-0 h-full w-full translate-y-2 translate-x-2 bg-white md:translate-y-2 md:translate-x-2;
      content: '';
      z-index: -1;
    }
  }
}


/* Default styling for the image */
.responsive-image {
  width: 100%; /* Set the default width to 100% */
}

/* Media query for desktop screens */
@media only screen and (min-width: 768px) {
  .responsive-image {
      width: 53.33%; /* Set the width to 1/3 of the actual image on desktop */
      
  }

  /* .lelle{
    width: 131rem !important;
   
   } */
  .llll{
    margin-top: -23em;
   
  }
  


}


/* styles/globals.css */

@keyframes rotateClockwise {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotateAnticlockwise {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

.rotate-clockwise {
  animation: rotateClockwise 140s linear infinite;
}

.rotate-anticlockwise {
  animation: rotateAnticlockwise 100s linear infinite;
}

.rotate-clockwiser {
  animation: rotateClockwise 200s linear infinite;
}







.bizzy {
  font-family: "Ultra", serif;
  font-size: 10vw;
  display: flex;
  align-items: center;
  gap: 5%;
  max-height: 100px;
  text-align: center;
}

@keyframes fontGrow {
  0% {
    transform: scaleY(1);
  }
  50% {
    transform: scaleY(2);
  }
  100% {
    transform: scaleY(1);
  }
}

.bizzy-letters {
  animation-name: fontGrow;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  transform-origin: top;
  transition-timing-function: ease-in-out;
}

.letter-b {
  color: var(--peach);
}

.letter-i {
  color: var(--green);
  animation-delay: 1s;
}

.letter-z1 {
  color: var(--pink);
}

.letter-z2 {
  color: var(--lilac);
  animation-delay: 1s;
}

.letter-y {
  color: var(--dark-green);
}

.bizzy-B {
  display: flex;
  gap: 5%;
  font-family: "Ultra", serif;
  font-size: 10vw;
}

@keyframes fontGrowReverse {
  0% {
    transform: scaleY(2);
  }
  50% {
    transform: scaleY(1);
  }
  100% {
    transform: scaleY(2);
  }
}

.bizzy-letters-B {
  animation-name: fontGrowReverse;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  transform-origin: bottom;
  transition-timing-function: ease-in-out;
  
}

.letter-C {
  color: #cbe69f;
}

.letter-O {
  color: #cbe;
  animation-delay: 1s;
  font-stretch: ultra-condensed;
}

.letter-D {
  color: #91d1df;
}

.letter-I {
  color: #f7b407;
  animation-delay: 1s;
}

.letter-N {
  color: pink;
}







/* The secret sauce that enables gradient rotation. NOTE: does not work in all browsers. https://caniuse.com/?search=%40property */
@property --border-angle-1 {
	syntax: "<angle>";
	inherits: true;
	initial-value: 0deg;
}

@property --border-angle-2 {
	syntax: "<angle>";
	inherits: true;
	initial-value: 90deg;
}

@property --border-angle-3 {
	syntax: "<angle>";
	inherits: true;
	initial-value: 180deg;
}


/* sRGB color. */
:root {
	--bright-blue: rgb(0, 100, 255);
	--bright-green: rgb(0, 255, 0);
	--bright-red: rgb(255, 0, 0);
	--background: #18181b;
	--foreground: white;
	--border-size: 4px;
	--border-radius: 0.75em;
}

/* Display-P3 color, when supported. */
@supports (color: color(display-p3 1 1 1)) {
	:root {
		--bright-blue: color(display-p3 0 0.2 1);
		--bright-green: color(display-p3 0.4 1 0);
		--bright-red: color(display-p3 1 0 0);
	}
}


.container {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  
  gap: 2rem;
  /* margin-left: 50px;
  margin-right: 59px; */
}


.bigFontSize {
  font-size: 5.5em;
}


/* -- BUTTON -- */
.button {
  
	--border-angle-1: 0deg;
	--border-angle-2: 90deg;
	--border-angle-3: 180deg;
	color: inherit;
  cursor: pointer;
	font-size: 1.3rem;
	font-family: inherit;
	border: 0;
	padding: var(--border-size);
	display: flex;
	width: max-content;
	border-radius: var(--border-radius);
	background-color: transparent;
	background-image: conic-gradient(
			from var(--border-angle-1) at 10% 15%,
			transparent,
			var(--bright-blue) 10%,
			transparent 30%,
			transparent
		),
		conic-gradient(
			from var(--border-angle-2) at 70% 60%,
			transparent,
			var(--bright-green) 10%,
			transparent 60%,
			transparent
		),
		conic-gradient(
			from var(--border-angle-3) at 50% 20%,
			transparent,
			var(--bright-red) 10%,
			transparent 50%,
			transparent
		);
	animation: 
		rotateBackground 3s linear infinite,
		rotateBackground2 8s linear infinite,
		rotateBackground3 13s linear infinite;
}

/* Change this background to transparent to see how the gradient works! */
.button .text {
	background: var(--background); 
	padding: 1rem 0;
  width: 180px;
	border-radius: calc(var(--border-radius) - var(--border-size));
	color: var(--foreground);
}

.rocket {
  display: inline-block;
  transition: all 0.3s ease-in-out;
}

/* Toggling this class, excecute all the animations, using the :has() selector */
.animate {
  animation: backgroundImage .1s ease-in-out 1s forwards;
}

.animate .text > span {
  transition: all 0.3s ease-in-out;
  animation: ocultText .3s ease-in-out forwards;
}

.animate .text > .rocket {
  transform: translateX(-50%);
  animation: 
  vibration .5s ease-in-out .3s 2,
  launch 1.5s ease-in-out 1.3s forwards;
}

/* Restart button */
.restart {
  position: absolute;
  border: 0;
  background: transparent;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  font-family: inherit;
 
  border-radius: var(--border-radius);
  /* border: 1px solid white; */
  transition: all 0.3s ease-in-out;
  opacity: 0;
}

.restart:hover {
  background: white;
  color: black;
}

.restart:has(~ .animate) {
  animation: showRestartButton .5s ease-in-out 2.5s forwards;
}


/* -- ANIMATIONS -- */
/* Inputs */
@keyframes moveRightAndFadeOut {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(100%);
  }
}

@keyframes moveLeftAndFadeOut {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-100%);
  }
}

/* Submit button */
@keyframes backgroundImage {
  100% {
    background-image: var(--background);
    pointer-events: none;
  }
}

@keyframes ocultText{
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Rocket */
@keyframes vibration {
  0% {
    margin-left: 0px;
  }
  20% {
    margin-left: -3px;
  }
  40% {
    margin-left: 3px;
  }
  60% {
    margin-left: -3px;
  }
  80% {
    margin-left: 3px;
  }
  100% {
    margin-left: 0px;
  }
}

@keyframes launch {
  0% {
    transform: translate(-50%, 0);
  }
  20% {
    transform: translate(-50%, 10vh);
  }
  100% {
    transform: translate(-50%, -100vh);
  }
}

/* restart */
@keyframes showRestartButton {
  100% {
    opacity: 1;
    pointer-events: all;
    cursor: pointer;
    z-index: 1;
  }
}

/* gradients */
@keyframes rotateBackground {
	to { --border-angle-1: 360deg; }
}

@keyframes rotateBackground2 {
	to { --border-angle-2: -270deg; }
}

@keyframes rotateBackground3 {
	to { --border-angle-3: 540deg; }
}
